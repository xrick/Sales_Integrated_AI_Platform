Phase 2: 提示工程整合 - 實用重構計劃                                                            │ │
│ │                                                                                                 │ │
│ │ 核心目標                                                                                        │ │
│ │                                                                                                 │ │
│ │ 基於現有提示系統，建立簡潔、實用、易擴充的提示管理架構                                          │ │
│ │                                                                                                 │ │
│ │ 主要組件設計                                                                                    │ │
│ │                                                                                                 │ │
│ │ 1. PromptManagementHandler（主管理器）                                                          │ │
│ │                                                                                                 │ │
│ │ 功能: 統一的提示管理入口                                                                        │ │
│ │ - 標準動作合約: async def select_prompt(context) -> Dict[str, Any]                              │ │
│ │ - 與狀態機深度整合，自動根據狀態選擇提示                                                        │ │
│ │ - 內建緩存機制，提升響應速度                                                                    │ │
│ │ - 簡單的錯誤處理和降級策略                                                                      │ │
│ │                                                                                                 │ │
│ │ 2. PromptRegistry（提示註冊中心）                                                               │ │
│ │                                                                                                 │ │
│ │ 功能: 提示模板的載入和管理                                                                      │ │
│ │ - 自動掃描現有提示目錄（PromptsHub）                                                            │ │
│ │ - 統一的提示ID命名規範                                                                          │ │
│ │ - 支援熱重載，無需重啟服務                                                                      │ │
│ │ - 提供提示元數據管理（版本、作者、用途）                                                        │ │
│ │                                                                                                 │ │
│ │ 3. PromptSelector（提示選擇器）                                                                 │ │
│ │                                                                                                 │ │
│ │ 功能: 智能提示選擇邏輯                                                                          │ │
│ │ - 基於配置文件的狀態-提示映射                                                                   │ │
│ │ - 意圖識別和提示匹配                                                                            │ │
│ │ - 多層選擇邏輯（狀態 → 意圖 → 預設）                                                            │ │
│ │ - 清晰的選擇邏輯，易於調試                                                                      │ │
│ │                                                                                                 │ │
│ │ 4. PromptRenderer（提示渲染器）                                                                 │ │
│ │                                                                                                 │ │
│ │ 功能: 動態變數替換和提示組裝                                                                    │ │
│ │ - 支援現有的 {product_data}, {query}, {answer} 變數                                             │ │
│ │ - 安全的模板渲染，防止注入攻擊                                                                  │ │
│ │ - 多層變數解析（全域變數 + 上下文變數）                                                         │ │
│ │ - 提示片段組合功能                                                                              │ │
│ │                                                                                                 │ │
│ │ 配置驅動設計                                                                                    │ │
│ │                                                                                                 │ │
│ │ prompt_mapping.json（狀態映射）                                                                 │ │
│ │                                                                                                 │ │
│ │ {                                                                                               │ │
│ │   "INIT": "welcome_prompt",                                                                     │ │
│ │   "FUNNEL_START": "funnel_introduction_prompt",                                                 │ │
│ │   "FUNNEL_QUESTION": "slot_collection_prompt",                                                  │ │
│ │   "RECOMMENDATION_PREPARATION": "product_search_prompt",                                        │ │
│ │   "RECOMMENDATION_PRESENTATION": "comparison_prompt"                                            │ │
│ │ }                                                                                               │ │
│ │                                                                                                 │ │
│ │ intent_mapping.json（意圖映射）                                                                 │ │
│ │                                                                                                 │ │
│ │ {                                                                                               │ │
│ │   "ask_recommendation": "recommendation_prompt",                                                │ │
│ │   "ask_comparison": "comparison_prompt",                                                        │ │
│ │   "ask_price": "price_focused_prompt",                                                          │ │
│ │   "technical_question": "technical_qa_prompt"                                                   │ │
│ │ }                                                                                               │ │
│ │                                                                                                 │ │
│ │ 實作重點                                                                                        │ │
│ │                                                                                                 │ │
│ │ 高可讀性                                                                                        │ │
│ │                                                                                                 │ │
│ │ - 清晰的類別責任劃分                                                                            │ │
│ │ - 詳細的中文註釋和文檔字串                                                                      │ │
│ │ - 統一的命名規範和代碼風格                                                                      │ │
│ │ - 簡單的錯誤處理流程                                                                            │ │
│ │                                                                                                 │ │
│ │ 易於擴充                                                                                        │ │
│ │                                                                                                 │ │
│ │ - 策略模式設計，新增提示類型只需添加配置                                                        │ │
│ │ - 插件式架構，支援自定義提示選擇器                                                              │ │
│ │ - 配置文件驅動，無需修改代碼即可調整行為                                                        │ │
│ │ - 清晰的接口設計，便於單元測試                                                                  │ │
│ │                                                                                                 │ │
│ │ 真正實用                                                                                        │ │
│ │                                                                                                 │ │
│ │ - 基於現有 PromptsHub 目錄結構                                                                  │ │
│ │ - 向下兼容現有的提示使用方式                                                                    │ │
│ │ - 內建性能優化（緩存、非同步載入）                                                              │ │
│ │ - 實用的監控和日誌功能                                                                          │ │
│ │                                                                                                 │ │
│ │ 與 Phase 1 整合                                                                                 │ │
│ │                                                                                                 │ │
│ │ - 監聽狀態轉換事件，自動更新提示上下文                                                          │ │
│ │ - 使用相同的 Redis 緩存層                                                                       │ │
│ │ - 遵循相同的錯誤處理模式                                                                        │ │
│ │ - 保持一致的日誌格式                                                                            │ │
│ │                                                                                                 │ │
│ │ 預期效益                                                                                        │ │
│ │                                                                                                 │ │
│ │ 1. 開發效率: 統一的提示管理，減少重複代碼                                                       │ │
│ │ 2. 維護性: 集中化配置，易於調整和優化                                                           │ │
│ │ 3. 性能: 智能緩存和預載入機制                                                                   │ │
│ │ 4. 可觀測性: 完整的提示使用統計和效果追蹤                                                       │ │
│ │                                                                                                 │ │
│ │ 這個方案專注於解決實際問題，避免過度設計，確保每個組件都有明確的價值和用途。 